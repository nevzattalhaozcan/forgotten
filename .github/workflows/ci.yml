name: CI

on:
    push:
        branches: [ "**" ]
    pull_request:
        branches: [ "**" ]

jobs:
    test:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:15
                env:
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: testdb
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432
                    
        steps:
            - uses: actions/checkout@v4
            
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: 1.23
            
            - name: Cache Go modules
              uses: actions/cache@v3
              with:
                path: ~/go/pkg/mod
                key: ${{ runner.os}}~go-${{ hashFiles('**/go.sum') }}
                restore-keys: |
                    ${{ runner.os }}~go-

            - name: Install dependencies
              run: go mod download

            - name: Run tests
              run: go test -v -race -covermode=atomic -coverprofile=coverage.out ./...
              env:
                DB_URL: postgres://postgres:password@localhost:5432/testdb?sslmode=disable

            - name: Upload coverage to Codacy
              uses: codacy/codacy-coverage-reporter-action@v1
              with:
                    project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
                    coverage-reports: coverage.out
                    force-coverage-parser: go

            - name: Codacy finalize coverage
              run: bash <(curl -Ls https://coverage.codacy.com/get.sh) final
              env:
                CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}        
            
            - name: Run linter
              uses: golangci/golangci-lint-action@v3
              with:
                    version: latest
                    args: --timeout=5m --out-format=colored-line-number
            
            - name: Build
              run: go build -v ./cmd/server        

        